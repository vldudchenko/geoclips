import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import { VideoService } from '../services/videoService';
import VideoPlayer from './VideoPlayer';
import './VideoPage.css';

const VideoPage = ({ currentUser }) => {
  const { userDisplayName, videoId } = useParams();
  const navigate = useNavigate();
  const [video, setVideo] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    const loadVideo = async () => {
      try {
        setLoading(true);
        setError(null);
        
        // –ü–æ–ª—É—á–∞–µ–º –≤–∏–¥–µ–æ –ø–æ ID
        const videoData = await VideoService.getVideoById(videoId);
        
        if (!videoData) {
          setError('–í–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
          return;
        }
        
        setVideo(videoData);
        
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ:', error);
        setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ');
      } finally {
        setLoading(false);
      }
    };

    if (videoId) {
      loadVideo();
    }
  }, [videoId, userDisplayName]);

  const handleClose = () => {
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–ª–∏ –Ω–∞ –≥–ª–∞–≤–Ω—É—é
    if (window.history.length > 1) {
      navigate(-1);
    } else {
      navigate('/');
    }
  };


  if (loading) {
    return (
      <div className="video-page-loading">
        <div className="loading-spinner">‚è≥</div>
        <p>–ó–∞–≥—Ä—É–∑–∫–∞ –≤–∏–¥–µ–æ...</p>
      </div>
    );
  }

  if (error || !video) {
    return (
      <div className="video-page-error">
        <div className="error-content">
          <h2>üòî –í–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</h2>
          <p>{error || '–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º–æ–µ –≤–∏–¥–µ–æ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç'}</p>
          <button onClick={handleClose} className="back-button">
            ‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥
          </button>
        </div>
      </div>
    );
  }

  return (
    <div className="video-page">
      {/* –í–∏–¥–µ–æ–ø–ª–µ–µ—Ä */}
      <div className="video-page-content">
        <VideoPlayer 
          video={video} 
          currentUser={currentUser}
          onClose={handleClose} 
        />
      </div>
    </div>
  );
};

export default VideoPage;
